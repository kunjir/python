8. Write a Python program for static implementation of stack to perform following operations:
a. init
b. push
c. pop
d. isEmpty
e. isFull
ans:
class StaticStack:
    def __init__(self, max_size):
        self.max_size = max_size
        self.stack = [None] * max_size
        self.top = -1

    def isEmpty(self):
        return self.top == -1

    def isFull(self):
        return self.top == self.max_size - 1

    def push(self, value):
        if self.isFull():
            print("Stack is full")
        else:
            self.top += 1
            self.stack[self.top] = value

    def pop(self):
        if self.isEmpty():
            print("Stack is empty")
        else:
            self.top -= 1

    def display(self):
        if self.isEmpty():
            print("Stack is empty")
        else:
            for i in range(self.top, -1, -1):
print(self.stack[i])

# Example Usage
stack = StaticStack(5)
stack.push(1)
stack.push(2)
stack.push(3)
stack.display()
stack.pop()
stack.display()
