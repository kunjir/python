7.Write a Python program for dynamic implementation of linear queue to perform following operations:
a. init
b. enqueue
c. dequeue
d. isEmpty
ans:
class LinearQueue:
    def __init__(self, max_size):
        self.max_size = max_size
        self.queue = [None] * max_size
        self.front = self.rear = -1

    def isEmpty(self):
        return self.front == -1 and self.rear == -1

    def enqueue(self, value):
        if (self.rear + 1) % self.max_size == self.front:
            print("Queue is full")
        elif self.isEmpty():
            self.front = self.rear = 0
            self.queue[self.rear] = value
        else:
            self.rear = (self.rear + 1) % self.max_size
            self.queue[self.rear] = value

    def dequeue(self):
        if self.isEmpty():
            print("Queue is empty")
        elif self.front == self.rear:
            self.front = self.rear = -1
        else:
            self.front = (self.front + 1) % self.max_size

    def display(self):
        if self.isEmpty():
            print("Queue is empty")
        elif self.rear >= self.front:
 for i in range(self.front, self.rear + 1):
                print(self.queue[i], end=' ')
            print()
        else:
            for i in range(self.front, self.max_size):
                print(self.queue[i], end=' ')
            for i in range(0, self.rear + 1):
                print(self.queue[i], end=' ')
            print()

# Example Usage
queue = LinearQueue(5)
queue.enqueue(1)
queue.enqueue(2)
queue.enqueue(3)
queue.display()
queue.dequeue()
queue.display()
